
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'demo_dbt'
version: '1.0.0'
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: 'snowflake'

# These configurations specify where dbt should look for different types of files.
# The `source-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
source-paths: ["models"]
analysis-paths: ["analysis"]
test-paths: ["tests"]
data-paths: ["data"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]


target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_modules"

on-run-end:
  - 'grant usage on schema dev.DBT_RRIPPER to role analyst'
  - 'grant select on all tables in schema dev.DBT_RRIPPER to role analyst'
  - 'grant select on all views in schema dev.DBT_RRIPPER to role analyst'

# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/ directory
# as tables. These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.
models:
  demo_dbt:
    # Config indicated by + and applies to all files under models/example/
    example:
      +materialized: view
      vars: 
        my_first_variable: True
        my_second_variable: 2020
        my_third_variable: 1

    #  post-hook: 'grant usage on schema {{target.this}} to role accountadmin'
    #  post-hook: 'grant select on {{this}} to role accountadmin'
